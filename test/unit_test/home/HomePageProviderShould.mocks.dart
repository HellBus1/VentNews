// Mocks generated by Mockito 5.3.2 from annotations
// in vent_news/test/unit_test/home/HomePageProviderShould.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i8;
import 'package:vent_news/commons/resources/DataState.dart' as _i3;
import 'package:vent_news/data/NewsRepository.dart' as _i4;
import 'package:vent_news/data/model/request/BreakingNews.dart' as _i7;
import 'package:vent_news/data/model/response/BreakingNewsResult.dart' as _i6;
import 'package:vent_news/data/remote/NewsRemoteService.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNewsRemoteService_0 extends _i1.SmartFake
    implements _i2.NewsRemoteService {
  _FakeNewsRemoteService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataState_1<T> extends _i1.SmartFake implements _i3.DataState<T> {
  _FakeDataState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NewsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsRepository extends _i1.Mock implements _i4.NewsRepository {
  MockNewsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NewsRemoteService get service => (super.noSuchMethod(
        Invocation.getter(#service),
        returnValue: _FakeNewsRemoteService_0(
          this,
          Invocation.getter(#service),
        ),
      ) as _i2.NewsRemoteService);
  @override
  set service(_i2.NewsRemoteService? _service) => super.noSuchMethod(
        Invocation.setter(
          #service,
          _service,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Stream<_i3.DataState<_i6.BreakingNewsResult>> fetchPaginatedGameList(
          {required _i7.BreakingNews? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPaginatedGameList,
          [],
          {#request: request},
        ),
        returnValue: _i5.Stream<_i3.DataState<_i6.BreakingNewsResult>>.empty(),
      ) as _i5.Stream<_i3.DataState<_i6.BreakingNewsResult>>);
  @override
  _i5.Future<_i3.DataState<T>> getStateOf<T>(
          {required _i5.Future<_i8.HttpResponse<T>> Function()? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStateOf,
          [],
          {#request: request},
        ),
        returnValue: _i5.Future<_i3.DataState<T>>.value(_FakeDataState_1<T>(
          this,
          Invocation.method(
            #getStateOf,
            [],
            {#request: request},
          ),
        )),
      ) as _i5.Future<_i3.DataState<T>>);
}
